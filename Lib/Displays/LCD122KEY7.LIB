/*
   Copyright (c) 2015 Digi International Inc.

   This Source Code Form is subject to the terms of the Mozilla Public
   License, v. 2.0. If a copy of the MPL was not distributed with this
   file, You can obtain one at http://mozilla.org/MPL/2.0/.
*/
/*** Beginheader */
#ifndef __LCD122KEY7_LIB
#define __LCD122KEY7_LIB

/*** endheader */

/* START LIBRARY DESCRIPTION *********************************************
LCD122KEY7.LIB

DESCRIPTION:	Support for the 122x32 LCD and 7-key Keypad Module with
					7 LED's.

This library should be #used after the board specific library.

The following macros should be defined in board specific libraries
or applications.  They are shown here as an example.

// required for display operations
// PE7 is used as an example here on a 22MHz board
// LCD requires 160 nsec on writes and 200 nsec on reads
// Calculate wait states:   #ws = tcyc/tclk - 0.5
//	Here:		#ws = 160/(1/22.1184MHz) - 0.5 = 3.54
//	so:		#ws = 7
#define LCDCSREGISTER	IB7CR			// I/O strobe usually port E pin
#define LCDCSSHADOW		IB7CRShadow	// shadow register for LCDCSREGISTER
#define LCDCSCONFIG		0x78			// usually set 7 waits, I/O Rd & Wr
												//  data strobe, allow writes
#define LCDSTROBE 		0x80			// bit mask of I/O strobe pin
#define LCDBASEADDR		0xE000		// A15, A14, A13 = I/O Address from IBxCR

// required for keypad operations
#define KEYCSREGISTER	IB7CR			// I/O strobe usually same as LCDCSREGISTER
#define KEYCSSHADOW		IB7CRShadow	// shadow register for KEYCSREGITER
#define KEYCSCONFIG		0x78			// usually same as LCDSTROBE
#define KEYSTROBE 		0x80			// bit mask of I/O strobe pin, usually
												//  same as LCDSTROBE
#define KEYBASEADDR 		0xE000		// usually same as LCDBASEADDR

SUPPORT LIBS:

REVISION HISTORY:

	09/12/02	pel	Added PORTA_AUX_IO error message whenever dispInit()
						is used.

END DESCRIPTION **********************************************************/

/*** BeginHeader  */
#ifndef LCDCSREGISTER		//I/O strobe usually port E pin
#error "LCDCSREGISTER undefined for LCD operation"
#endif

#ifndef LCDCSSHADOW			//shadow register for LCDCSREGISTER
#error "LCDCSSHADOW undefined for LCD operation"
#endif

#ifndef LCDCSCONFIG			//usually set 7 waits, I/O Rd & Wr data strobe, allow writes
#error "LCDCSCONFIG undefined for LCD operation"
#endif

#ifndef LCDSTROBE				// bit mask of I/O strobe pin
#error "LCDSTROBE undefined for LCD operation"
#endif

#ifndef LCDBASEADDR			// A15, A14, A13 = I/O Address from IBxCR
#error "LCDBASEADDR undefined for LCD operation"
#endif

#ifndef KEYCSREGISTER		//I/O strobe usually same as LCDCSREGISTER
#error "KEYCSREGISTER undefined for Keypad operation"
#endif

#ifndef KEYCSSHADOW			//shadow register for KEYPADCSREGISTER
#error "KEYCSSHADOW undefined for Keypad operation"
#endif

#ifndef KEYCSCONFIG			//usually same as LCDCSCONFIG
#error "KEYCSCONFIG undefined for Keypad operation"
#endif

#ifndef KEYSTROBE				// bit mask of I/O strobe pin, usually same as LCDSTROBE
#error "KEYSTROBE undefined for Keypad operation"
#endif

#ifndef KEYBASEADDR 			// usually same as LCDBASEADDR
#error "KEYBASEADDR undefined for Keypad operation"
#endif

// LCD control
#define LCDMREADSTATUS	LCDBASEADDR+0x0002
#define LCDMWRITEINSTR	LCDBASEADDR+0x0000
#define LCDSREADSTATUS	LCDBASEADDR+0x0006
#define LCDSWRITEINSTR	LCDBASEADDR+0x0004
#define LCDMREADDATA		LCDBASEADDR+0x0003
#define LCDMWRITEDATA	LCDBASEADDR+0x0001
#define LCDSREADDATA		LCDBASEADDR+0x0007
#define LCDSWRITEDATA	LCDBASEADDR+0x0005

#define LCDBACKLIGHT		LCDBASEADDR+0x000B	//write on/off to data bit 7

// LCD LED's
#define LCDLEDREG			LCDBASEADDR+0x0008	//led enable
#define LCDLED0ADDR		LCDBASEADDR+0x0004
#define LCDLEDADDR		LCDBASEADDR+0x000B	//write on/off to 7 leds, data bits 0-6

// keypad
#define KEYADDR			KEYBASEADDR+0x000A	//keypad control

///////
// The following libraries must listed in order as shown and
// after macros above
///////
#use "keypad7.lib"
#use "mscg12232.lib"
#use "graphic.lib"
#use "6x8l.lib"
#use "8x10l.lib"
#use "12x16l.lib"
#use "courier12.lib"

/*** EndHeader */

/*** BeginHeader LEDShadow */
extern char LEDShadow;
/*** EndHeader */

char LEDShadow;	// Shadow register for LCD/Keypad Module LED's


/*** BeginHeader dispLedOut */

void dispLedOut(int led, int value);

/*** EndHeader */

/* START FUNCTION DESCRIPTION ********************************************
dispLedOut					<LCD122KEY7.LIB>

SYNTAX:  void dispLedOut(int led, int value)

DESCRIPTION:	LED ON/OFF control on LCD/Keypad Modules only.  This
					function	should be used instead of ledOut().
					This function is non-reentrant.

PARAMETER1:  LED to control on LCD/Keypad Module.
	0  = LED DS1
	1  = LED DS2
	2  = LED DS3
	3  = LED DS4
	4  = LED DS5
	5  = LED DS6
	6  = LED DS7

PARAMETER2:  value used to control LED.
	0 = OFF
	1 = ON

RETURN VALUE:	None

END DESCRIPTION*******************************************************/
nodebug
void dispLedOut(int led, int value)
{
	auto unsigned char outputBit;

	// Initialize LED shadow register
	#GLOBAL_INIT {LEDShadow = 0x00;}

	if ((led < 0) || (led > 7) || (value < 0) || (value > 1))
	{
		exception(-ERR_BADPARAMETER);
		exit(-ERR_BADPARAMETER);
	}

	outputBit = 0x01 << led;
	if (value == 0)
	{	// turn-on the specified LED
		WrPortE(LCDLEDADDR, &LEDShadow, (LEDShadow & ~outputBit));
	}
	else
	{	// turn-off the specified LED
		WrPortE(LCDLEDADDR, &LEDShadow, (LEDShadow | outputBit));
	}
}


/*** BeginHeader dispInit */

void dispInit(void);

/*** EndHeader */

#ifdef USE_PORTA_AUX_IO
#ifndef PORTA_AUX_IO
#error "PORTA_AUX_IO is undefined for LCD/Keypad. Define at top of application code."
#endif
#endif

/* START FUNCTION DESCRIPTION ********************************************
dispInit					<LCD122KEY7.LIB>

SYNTAX:  void dispInit();

DESCRIPTION:	Initializes the 122x32 Display and 1x7 Keypad module with
					LED's.  Setup keypad configuration using keypadDef() or
					keyConfig() after this function call.

RETURN VALUE:	None

END DESCRIPTION*******************************************************/
nodebug
void dispInit(void)
{

	glInit();
	keyInit();
}

/*** Beginheader */
#endif
/*** endheader */

