/*
   Copyright (c) 2015 Digi International Inc.

   This Source Code Form is subject to the terms of the Mozilla Public
   License, v. 2.0. If a copy of the MPL was not distributed with this
   file, You can obtain one at http://mozilla.org/MPL/2.0/.
*/
/*** BeginHeader **************************************************************/

// FAT filesystem parameters.
// The DOS FAT filesystem requires use of xmem battery-backed RAM for
// reliability and performance.  This BB ram area is taken out of the
// upper (higher physical address) part of the /CS1 SRAM.
//#define FAT_MAXBUFS			0
// To customize the maximum number of FAT buffers, uncomment the "#define
//  FAT_MAXBUFS 0" line above and then edit the "0" value to set the desired
//  maximum number of FAT buffers, which must be a multiple of 8.
#ifndef FAT_MAXBUFS
	#define FAT_MAXBUFS			__BT__FAT_MAXBUFS
#endif
                                 // Number of FAT filesystem cache blocks
                                 // of 512 bytes each.  This MUST be a multiple
                                 // of 8.  Set to 0 if not using the DOS FAT
                                 // filesystem.
#define FAT_MAXDEVS			4		// Max number of devices able to be registered
											// at any one time.  Should have one count
                                 // for each non-removable device (such as
                                 // on-board serial flash) plus preferably 2
                                 // counts for each removable media device
                                 // (such as compact flash card readers).
#define FAT_MAXPARTITIONS	4		// Max number of partitions mounted at any one
											// time.  Should be at least equal to
                                 // FAT_MAXDEVS, plus additional counts if any
                                 // of the registered devices are expected to
#ifndef FAT_MAXRJ                // have more than one partition.
	#define FAT_MAXRJ			1024L	// Number of bytes to allocate for each
#endif									// rollback journal.  There will be one RJ for
                                 // each partition.
#define FAT_MAXCHK 			21		// Number of bytes of checkpoint or marker data
											// per rollback- or marker journal.
#define FAT_MAXMARKERS  	16		// Maximum number of markers
#define FAT_MAXSPARE			16		// Number of bytes of spare data per 512 byte
											// cache block, required for nand flash.
// The following macro should not be changed.  It calculates the total number
// of bytes of BB ram which will be required by the DOS FAT filesystem.
#ifndef FAT_TOTAL
	#if FAT_MAXBUFS
	   // This is rounded up to a multiple of 4k.  Unfortunately, we have to use
	   // some hard-coded constants here since the compiler doesn't know the sizeof
	   // the necessary structures at this point.  For a proper derivation of this
	   // expression, see the equivalent definition in lib\filesystem\FATWTC.LIB.
	   #define FAT_TOTAL (FAT_MAXBUFS*(512L+16L)+FAT_MAXPARTITIONS*FAT_MAXRJ+\
	                      (FAT_MAXCHK*2+22)*FAT_MAXMARKERS+\
	                      8+FAT_MAXBUFS*10+FAT_MAXDEVS*22+\
	                      0x0FFF&0xFFFFF000)
	#else
	   #define FAT_TOTAL 0
	#endif
#endif
#ifndef FAT_NBLOCKS
	#define FAT_NBLOCKS  (0xFF&(FAT_TOTAL>>12))
	                                  // Number of 4 KB blocks reserved for FAT,
	                                  // used in (BB)DATASEGVAL macro definitions.
#endif
/*** EndHeader */